<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="kryptonPalette1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACxAAAAsQAa0jvXUAAANrSURBVEhLrdZfSFNRHAfwswKJ
        wvVnaC81iwlt2OgfiCNs/bGWI2w0SoRGL7O9VYQQBVpJjXrwoXqJevNFKIJgOghla70lWJCU+G+6JGkP
        MVHQYdn6/u686+x4dvenvvBh27nnnN/uv3Mv+0/ZDV8hoPwqIfvhGjTBFmooIDvgB6RWvYKiYwN1ggS4
        QSvbIQ7qGNUzeARPoOA0Aj9JLchCRWeB7yvzFArODVAHvqUGIbuAzilfQMtzKIOs3IKt6a9ZUc/bImyg
        Bi73QZw8n22QFWr8BiblVzoPYBlo23dYD3x2wiTwE2t5B2sSBtpIhZqhY/W36j3IQnsQA75vLj+BjlJW
        ToOss+oX+EEWPdA1IBsnQzuVlccg68jLVbzY830WsnIe3sBHeAkfQBzUDnxug9hHy284AJrRwWcQB18B
        Cn/LFWIF8hZVswlkV29Q0kbn2gELXBuPVsWiQvd4vsWC/hz9ScpeUG9F1TEoKQbIdfVS+2bgcwjU7SUX
        VeMDvqCK2mXZA7T3a9LURA+/wnIR6OKQFab2C5A3TqeTtbW1scVFWoXzhyaVFRSdAWnsdjsLhUIslUop
        ZmfpoaYdmkwsQM/fS0DPa3FbA2RSUVHBgsGgUiyZTLJYLMai0ahCKzSJOHESzEDZB7QGi30yxb1eb2YP
        1YL5CttBnFC2ABwE2bmn8czn8ymFp6amFLTH9Dk5SXff2uQqmmsB4F+XeLUtLS1KYSo4MzPD5ubm2PT0
        NJuYmMDm7NBrjmySfKvOURDHrJSXl1tHR0eV4vF4nPn9fiMO+7qFBVrc/sYKssNGkxYSWi7FsUtVVVVH
        AoEA6+npuaDT6SI4/KdwBDILjgWWQBxIkxUTF4hzhHA7Ha+rq7uK716DwfB6bGxMeds5CeLaSmiSUpIp
        rtfrv7jd7ps2m625pqaGmUymdtzP55aXqVz6BV4sSq9A/xIvfHI4HHc8Hk8DipaZzea7g4ODJ+h8j4yM
        pHsh16GgotgL1t3dzYaGhlh/f3+WgYEBhslZV1cXrVae+vr6yzjHrLKysrO3t9dJRelWEq9qev2hNwrN
        tLa2ZlYiGdpGh9Llcj1E9xfV1dWdfX19jdRO9zAtHvRZVIxGIxseHmbz8/OZCUSJRIKFw+GNFoulw2q1
        3otEIoep6Pj4uLI9vXJF2R+c41AtqBeLXQAAAABJRU5ErkJggg==
</value>
  </data>
</root>